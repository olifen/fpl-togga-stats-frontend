{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","$rootScope","User","logout","secureState","e","toState","authPayload","getPayload","main","currentUser","get","id","message","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$resource","update","method","UsersIndexController","usersIndex","all","query","UsersShowController","deleteUser","usersShow","$remove","params","delete","UsersEditController","usersEdit","$update","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('fplToggaStats', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('fplToggaStats')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('fplToggaStats')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User'];\nfunction MainController($auth, $state, $rootScope, User) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    const authPayload = $auth.getPayload();\n\n    if (authPayload) {\n      main.currentUser = User.get({ id: authPayload.id });\n    }\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('fplToggaStats')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/home',\n      templateUrl: '/templates/home.html'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    });\n\n  $urlRouterProvider.otherwise('/home');\n}\n","angular.module('fplToggaStats')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('fplToggaStats')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state'];\nfunction UsersShowController(User, $state) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n  usersShow.delete = deleteUser;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n"]}